---
# Fragmenstein jobs.
# See https://github.com/stephwills/fragment_network_merges
kind: DataManagerJobDefinition
kind-version: '2021.1'
name: Fragment network jobs for fragment merging
collection: fragment-network

test-groups:
- name: fragnet-search
  compose:
    file: docker-compose-fns.yaml
    delay-seconds: 10
  environment:
  - NEO4J_USERNAME: neo4j
  - NEO4J_PASSWORD: test123
  - NEO4J_SERVER: bolt://graph:7687

jobs:

  fragment-network-merge:
    name: Combine pairs of fragments using Fragment network
    description: >-
      Given multiple fragment molecules generate pairs of these and for each pair generate a merged molecule
      that combines aspects of those fragments.
    version: '1.0.0'
    category: comp chem
    keywords:
    - fragment-network
    - fbdd
    doc-url: fragment_network_merges/fragment_network_merges.md
    image:
      name: xchem/squonk2-fragment_network_merges
      tag: latest
      project-directory: /data
      working-directory: /data
      memory: 8Gi
      fix-permissions: true
      environment:
      - name: NEO4J_USERNAME
        value-from:
          secret:
            name: im-fragnet-graph
            key: username
      - name: NEO4J_PASSWORD
        value-from:
          secret:
            name: im-fragnet-graph
            key: password
      - name: NEO4J_SERVER
        value-from:
          secret:
            name: im-fragnet-graph
            key: server
    command: >-
      /code/squonkScripts/main.py
      --fragments {% for frag in fragments %} '{{ frag.split(",")[0] }}'{% endfor %}
      --proteins {% for frag in fragments %} '{{ frag.split(",")[1] }}'{% endfor %}
      --outfile '{{ outfile }}'
      --fragIdFieldName ref_mols
      {% if fragIdField %}--fragIdFieldValue '{{ fragIdField }}'{% endif %}
      {% if smilesFieldName %}--smiles_prop '{{ smilesFieldName }}'{% endif %}
      {% if proteinFieldName %}--protein_prop_name '{{ proteinFieldName }}'{% endif %}
      {% if proteinFieldValue %}--protein_prop_value '{{ proteinFieldValue }}'{% endif %}
    variables:
      order:
        inputs:
        - fragments
        options:
        - outfile
        - fragIdField
        - smilesFieldName
        - proteinFieldName
        - proteinFieldValue
      inputs:
        type: object
        required:
        - fragments
        properties:
          fragments:
            title: Fragment molecules
            multiple: true
            mime-types:
            - chemical/x-mdl-molfile
            - chemical/x-mdl-sdfile
            type: file
      outputs:
        type: object
        properties:
          outputs:
            title: Merged molecules
            mime-types:
            - chemical/x-mdl-sdfile
            creates: '{{ outfile }}'
            type: file
            annotation-properties:
              fields-descriptor:
                origin: squonk2-job
                description: Merge pairs of fragments using the Fragment network
                fields:
                  IDX:
                    type: string
                    description: Molecule index
                    required: true
#                  DDG:
#                    type: number
#                    description: >-
#                      Delta deta G
#                    required: true
#                  RMSD:
#                    type: number
#                    description: RMSD from input fragments
#                    required: true
                  SuCOSScore:
                    type: number
                    description: SuCOSScore from input fragments
                    required: true
                  ref_mols:
                    type: string
                    description: Input fragments
                    required: true
                  smiles:
                    type: string
                    expression: '{{ smilesFieldName }}'
                    description: Molecule SMILES
                    required: true
                  protein:
                    type: string
                    expression: '{{ proteinFieldName }}'
                    description: PDB file used
              service-execution:
                service_ref: 'https://discourse.squonk.it/t/job-fragment_network_merges/110' #TODO: Remove in the future
      options:
        type: object
        required:
        - outfile
        properties:
          outfile:
            title: Output file name
            type: string
            default: merged.sdf
            pattern: "^[A-Za-z0-9_/.-]+[.]sdf$"
          fragIdField:
            title: Input field name containing the fragment ID
            type: string
            default: _Name
          smilesFieldName:
            title: Includes SMILES in output using this field name
            type: string
          proteinFieldName:
            title: Include PDB details in output using this field name
            type: string
          proteinFieldValue:
            title: Use this value for the proteinFieldName (if not specified the file name is used)
            type: string
    tests:
      simple-expand:
        run-groups:
        - name: fragnet-search
          ordinal: 1
        environment:
        - NEO4J_USERNAME
        - NEO4J_PASSWORD
        - NEO4J_SERVER
        inputs:
          fragments:
          - data/nsp13-x0176_0B.mol,data/nsp13-x0176_0B_apo-desolv.pdb
          - data/nsp13-x0246_0B.mol,data/nsp13-x0246_0B_apo-desolv.pdb
        options:
          outfile: merges.sdf
        checks:
          exitCode: 0
          outputs:
          - name: merges.sdf
            checks:
            - exists: true
#           - lineCount: 1180


#      simple-execution-mols:
#        inputs:
#          fragments:
#          - data/Mpro-x0072_0A.mol
#          - data/Mpro-x0104_0A.mol
#          - data/Mpro-x0107_0A.mol
#          proteins:
#          -  data/Mpro-x1249_0A_apo-desolv.pdb
#          - data/Mpro-x1249_0A_apo-desolv.pdb
#        options:
#          outfile: merges.sdf
#        checks:
#          exitCode: 0
#          outputs:
#          - name: merges.sdf
#            checks:
#            - exists: true
